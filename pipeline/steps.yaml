steps:  
  - checkout: self

  - task: AzureKeyVault@1
    displayName: PullSecrets
    inputs:
      azureSubscription: $(azureSubscription)-$(projectName)
      KeyVaultName: $(KeyVaultName)
      SecretsFilter: 'VERCEL-LMG-TOKEN'
      RunAsPreJob: true

  - task: SonarQubePrepare@5
    inputs:
      SonarQube: 'SonarQube-LMG K8s'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'Space-Management-Tool'
      cliProjectName: 'space-management-tool'
      cliSources: '.'
    condition: eq(variables['build.sourceBranch'], 'refs/heads/dev')

  - task: SonarQubeAnalyze@5
    condition: eq(variables['build.sourceBranch'], 'refs/heads/dev')

  - task: SonarQubePublish@5
    inputs:
      pollingTimeoutSec: '300'
    condition: eq(variables['build.sourceBranch'], 'refs/heads/dev')
  
  - task: sonar-buildbreaker@8
    inputs:
      SonarQube: 'SonarQube-LMG K8s'
    condition: eq(variables['build.sourceBranch'], 'refs/heads/dev')    
  
  - script: |
        echo '##vso[task.setvariable variable=VERCEL_ORG_ID]$(VERCEL-ORG-ID)'  
        echo '##vso[task.setvariable variable=VERCEL_PROJECT_ID]$(VERCEL-PROJECT-ID)'
    displayName: 'Set environment variables'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        # Write your commands here
        cd $(system.defaultworkingdirectory)
        vercel $(env-parameter) --token=$(VERCEL-LMG-TOKEN)
    env:
        VERCEL_ORG_ID: $(VERCEL_ORG_ID)
        VERCEL_PROJECT_ID: $(VERCEL_PROJECT_ID)
    displayName: 'Vercel build and deployment' 

