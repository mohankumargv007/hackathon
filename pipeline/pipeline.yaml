trigger: none
pr: none
# define variables: registryName, registryLogin and registryPassword in the Azure pipeline UI definition
variables:
  - template: vars.yaml
    parameters:
      projectName: "Space Management Tool" 
  - template: env-vars-dev.yaml
    parameters:
      projectName: "Space Management Tool"       
   
stages:
  - stage: dev
    condition: or(eq(variables['Build.Reason'], 'Manual'), eq(variables['build.sourceBranch'], 'refs/heads/dev')) 
    displayName: dev
    jobs:
      - deployment: dev
        variables:
          - template: env-vars-dev.yaml
        displayName: Deployment to Vercel DEV
        pool:
           vmImage: ubuntu-latest
        environment: dev-$(projectName)
        strategy:
          runOnce:
            deploy:
              steps:
                - template: steps.yaml

  - stage: CreatePR
    condition: eq(variables['build.sourceBranch'], 'refs/heads/release')
    displayName: CreatePR
    jobs:
      - deployment: CreatePRJob
        displayName: CreatePRJob 
        pool:
          vmImage: windows-latest
        environment: pr-to-main-$(projectName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: CreatePullRequest@1
                  inputs:
                    repoType: 'Azure DevOps'
                    repositorySelector: 'currentBuild'
                    sourceBranch: '$(Build.SourceBranch)'
                    targetBranch: 'main'
                    title: 'Merge branch $(Build.SourceBranch) into main'
                    linkWorkItems: false
                    autoComplete: true
               
  - stage: tag
    condition: succeeded('CreatePR')
    displayName: "Auto-Tag"
    jobs:
      - deployment: autoTag
        displayName: Create git Tag
        pool:
          vmImage: ubuntu-latest
        environment: tag-$(projectName)
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: AzureKeyVault@1
                  displayName: PullSecrets
                  inputs:
                    azureSubscription: $(kvServiceConnection)-$(project)
                    KeyVaultName: $(KeyVaultName)
                    SecretsFilter: 'PIPELINE-PYTHON-PAT'
                    RunAsPreJob: true
                - task: Bash@3
                  inputs:
                    targetType: 'inline'
                    script: |
                      git branch --show-current
                      git checkout --track origin/main
                      git branch --show-current
                      git tag $(Build.BuildNumber)
                      export PROJECT_URL="https://$(PIPELINE-PYTHON-PAT)@dev.azure.com/landmarkgroup/$(System.TeamProject)/_git/$(Build.Repository.Name)"
                      echo $PROJECT_URL > project.txt
                      PROJECT=$(sed -e 's/\s\+/%20/g' project.txt)
                      echo $PROJECT
                      git push $PROJECT --tags

  - stage: prod
    condition: eq(variables['build.sourceBranch'], 'refs/heads/release')
    displayName: prod
    jobs:
      - deployment: prod
        variables:
          - template: env-vars-prod.yaml
        displayName: Deployment to Vercel PROD
        pool:
           vmImage: ubuntu-latest
        environment: prod-$(projectName)
        strategy:
          runOnce:
            deploy:
              steps:
                - template: steps.yaml